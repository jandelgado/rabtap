---
on:
  push:
    tags:
      - v*

name: Upload release assets after tagging
jobs:
  build:
    name: create assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Verify go version (expecting toolchain setting from go.mod)
        run: |
          echo "GOVERSION=$(go version)" >> $GITHUB_ENV
          go version

      - name: Build release artefacts using goreleaser
        uses: goreleaser/goreleaser-action@v6
        if: startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload rabtap binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: rabtap-binary
          path: dist/rabtap_linux_amd64_v1/rabtap
          retention-days: 1

  docker-image:
    needs: build
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    name: create docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest
          #buildkitd-flags: --debug

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Download the binary artifact from the build job
      - name: Download rabtap binary artifact
        uses: actions/download-artifact@v5
        with:
          name: rabtap-binary
          path: ./docker-build

      - name: Prepare docker build
        run: |
          cp Dockerfile ./docker-build
          chmod 755 ./docker-build/rabtap
          ls -l ./docker-build

      - name: Get tag info for image label
        id: tag
        run: |
            TAG=$(git describe --tags)
            echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./docker-build
          build-args: |
            binary=./rabtap
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Tag and push latest
        if: steps.tag.outputs.tag != 'v99.9.9'
        uses: docker/build-push-action@v6
        with:
          context: ./docker-build
          build-args: |
            binary=./rabtap
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          no-cache: false
          pull: false